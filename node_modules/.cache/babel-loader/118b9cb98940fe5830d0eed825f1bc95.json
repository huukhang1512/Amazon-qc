{"ast":null,"code":"var _jsxFileName = \"/Users/Danny/development/amazon-return/src/Components/Input.js\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\"; //UI\n\nimport { Dialog, DialogActions, DialogTitle, Button, Tooltip, Typography, IconButton, CircularProgress, Avatar, ListItemText, ListItem, Drawer, Divider, Collapse } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Close, Share, FileCopyOutlined, Refresh } from '@material-ui/icons';\n\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.authenticationHandler = () => {\n      const {\n        userName\n      } = this.props;\n\n      if (userName === \" \") {\n        this.props.history.push(\"/register\");\n      }\n    };\n\n    this.modeChange = throttle((roomId, mode, adminName) => {\n      this.props.changingMode(roomId, mode, adminName);\n      this.setState({\n        right: false\n      });\n    }, 1000, {\n      trailing: false\n    });\n\n    this.userNameFirstLetterGetter = userName => {\n      var res = userName.charAt(0);\n      return res.toUpperCase();\n    };\n\n    this.share = () => {\n      if (navigator.share) {\n        navigator.share({\n          url: window.location.href\n        });\n      } else {\n        this.renderAlert(\"share\");\n      }\n    };\n\n    this.renderAlert = type => {\n      if (type === \"share\") {\n        this.setState({\n          alertMessage: \"Please copy to clipboard\"\n        });\n      } else {\n        this.setState({\n          alertMessage: \"Coppied!\"\n        });\n      }\n\n      this.setState({\n        open: true\n      }, () => {\n        setTimeout(() => {\n          this.setState({\n            open: false\n          });\n        }, 2000);\n      });\n    };\n\n    this.renderShareButton = () => {\n      const {\n        classes\n      } = this.props;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Share\",\n        arrow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          this.share();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Share, {\n        className: classes.shareIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Copy URL to clipboard\",\n        arrow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n        text: window.location.href,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: () => {\n          this.renderAlert(\"copy\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(FileCopyOutlined, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      })))), /*#__PURE__*/React.createElement(Tooltip, {\n        title: \"Close\",\n        arrow: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: this.toggleDrawer(false, \"right\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Close, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }))));\n    };\n\n    this.toggleDrawer = (open, type) => event => {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      type === \"right\" ? this.setState({\n        right: open\n      }) : this.setState({\n        instruction: open\n      });\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        alert: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        alert: false\n      });\n    };\n\n    this.state = {\n      right: false,\n      instruction: false,\n      open: false,\n      alert: false,\n      isAway: false,\n      alertMessage: \"\"\n    };\n    props.connectToRoom(this.props.match.params.roomId, this.props.userName);\n  }\n\n  componentDidMount() {\n    const roomId = this.props.match.params.roomId; // subscribeToRoom(roomId);\n\n    this.authenticationHandler();\n    document.title = `Meetings - Room ${roomId}`;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.event !== this.props.event && this.props.event === \"Going away\") {\n      this.setState({\n        isAway: true\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    const roomId = this.props.match.params.roomId;\n    this.props.disconnectFromRoom(roomId);\n  }\n\n  renderMode(modeName) {\n    switch (modeName) {\n      case \"QandA\":\n        return /*#__PURE__*/React.createElement(QAMode, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 16\n          }\n        });\n\n      case \"MeetingQueue\":\n        return /*#__PURE__*/React.createElement(MeetingQueueMode, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 16\n          }\n        });\n\n      case \"WhiteBoard\":\n        return /*#__PURE__*/React.createElement(WhiteBoardMode, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }\n        });\n\n      case \"Default Mode\":\n        return /*#__PURE__*/React.createElement(ModeChoosing, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 16\n          }\n        });\n\n      default:\n        break;\n    }\n  }\n\n  renderDrawerButton() {\n    const {\n      classes,\n      is_admin,\n      modeName,\n      userName\n    } = this.props;\n    const roomId = this.props.match.params.roomId;\n    let mode = \"Default Mode\";\n\n    if (modeName !== \"Default Mode\") {\n      mode = \"Default Mode\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }\n    }, is_admin && modeName !== \"Default Mode\" ? /*#__PURE__*/React.createElement(ListItem, {\n      button: true,\n      className: classes.bottomDrawer,\n      style: {\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ListItemText, {\n      primary: \"Change Mode\",\n      onClick: () => {\n        this.modeChange(roomId, mode, userName);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    })) : null);\n  }\n\n  render() {}\n\n}\n\nexport default withStyles(styles)(Input);","map":{"version":3,"sources":["/Users/Danny/development/amazon-return/src/Components/Input.js"],"names":["React","withRouter","Dialog","DialogActions","DialogTitle","Button","Tooltip","Typography","IconButton","CircularProgress","Avatar","ListItemText","ListItem","Drawer","Divider","Collapse","Alert","withStyles","Close","Share","FileCopyOutlined","Refresh","Input","Component","constructor","props","authenticationHandler","userName","history","push","modeChange","throttle","roomId","mode","adminName","changingMode","setState","right","trailing","userNameFirstLetterGetter","res","charAt","toUpperCase","share","navigator","url","window","location","href","renderAlert","type","alertMessage","open","setTimeout","renderShareButton","classes","shareIcon","toggleDrawer","event","key","instruction","handleClickOpen","alert","handleClose","state","isAway","connectToRoom","match","params","componentDidMount","document","title","componentDidUpdate","prevProps","componentWillUnmount","disconnectFromRoom","renderMode","modeName","renderDrawerButton","is_admin","bottomDrawer","justifyContent","render","styles"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\n//UI\nimport {Dialog,DialogActions,DialogTitle,Button,Tooltip,Typography,IconButton,\n  CircularProgress,Avatar,ListItemText,ListItem,Drawer,Divider,Collapse} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {Close,Share,FileCopyOutlined, Refresh} from '@material-ui/icons';\nclass Input extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      right: false,\n      instruction : false,\n      open: false,\n      alert : false,\n      isAway : false,\n      alertMessage : \"\"\n    };\n    props.connectToRoom(this.props.match.params.roomId, this.props.userName);\n  }\n\n  componentDidMount() {\n    const roomId = this.props.match.params.roomId;\n    // subscribeToRoom(roomId);\n    this.authenticationHandler()\n    document.title = `Meetings - Room ${roomId}`\n  }\n  componentDidUpdate(prevProps){\n    if (prevProps.event !== this.props.event && this.props.event === \"Going away\"){\n      this.setState({isAway : true})\n    }\n  }\n  authenticationHandler = () => {\n    const { userName } = this.props\n    if (userName === \" \") {\n      this.props.history.push(\"/register\")\n    }\n  }\n\n  modeChange= throttle((roomId, mode,adminName)=>{\n    this.props.changingMode(roomId, mode,adminName)\n    this.setState({right : false})\n  },1000,{trailing :false})\n\n  userNameFirstLetterGetter = (userName) => {\n    var res = userName.charAt(0)\n    return res.toUpperCase()\n  }\n\n  share = () => {\n    if(navigator.share){\n      navigator.share({\n        url : window.location.href\n      })\n    } else {\n      this.renderAlert(\"share\")\n    }\n  }\n  renderAlert = (type) =>{\n    if (type === \"share\"){\n      this.setState({alertMessage: \"Please copy to clipboard\"})\n    } else {\n      this.setState({alertMessage: \"Coppied!\"})\n    }\n    this.setState({\n      open : true,\n    },() => {setTimeout(()=>{\n      this.setState({open : false})\n    },2000)\n    })\n  }\n  renderShareButton = () => {\n    const { classes } = this.props;\n    return(\n      <div>\n        <Tooltip title = \"Share\" arrow>\n          <IconButton onClick={()=>{this.share()}}>\n            <Share className ={classes.shareIcon}/>\n          </IconButton>\n        </Tooltip>\n        <Tooltip title = \"Copy URL to clipboard\" arrow>\n          <CopyToClipboard text={window.location.href}>\n            <IconButton onClick={()=>{this.renderAlert(\"copy\")}}>\n          <FileCopyOutlined/>\n            </IconButton>\n          </CopyToClipboard>\n        </Tooltip>\n        <Tooltip title = \"Close\" arrow>\n            <IconButton onClick={this.toggleDrawer(false,\"right\")}>\n          <Close/>\n            </IconButton>\n        </Tooltip>\n      </div>\n    )\n  }\n\n  toggleDrawer = (open,type) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    type ===  \"right\" ? (this.setState({ right: open })):(this.setState({instruction: open}))\n  };\n\n  componentWillUnmount() {\n    const roomId = this.props.match.params.roomId;\n    this.props.disconnectFromRoom(roomId);\n  }\n\n  handleClickOpen = () => {\n    this.setState({alert : true})\n  };\n  handleClose = () => {\n    this.setState({alert : false})\n  };\n  renderMode(modeName) {\n    switch (modeName) {\n      case \"QandA\":\n        return <QAMode />\n      case \"MeetingQueue\":\n        return <MeetingQueueMode/>\n      case \"WhiteBoard\":\n        return <WhiteBoardMode/>\n      case \"Default Mode\":\n        return <ModeChoosing/>\n      default:\n        break;\n    }\n  }\n\n  renderDrawerButton(){\n    const { classes, is_admin,modeName,userName } = this.props;\n    const roomId = this.props.match.params.roomId;\n    let mode = \"Default Mode\"\n    if (modeName !== \"Default Mode\"){\n      mode = \"Default Mode\"\n    }\n    return (\n    <div>\n      {is_admin && modeName !==\"Default Mode\"? (\n        <ListItem button className={classes.bottomDrawer} style ={{justifyContent : \"center\"}}>\n          <ListItemText primary = \"Change Mode\" onClick={() => {this.modeChange(roomId, mode,userName)}}></ListItemText>\n        </ListItem>\n        ):( null\n    )}</div>)\n  }\n  render() {\n    \n  }\n}\nexport default withStyles(styles)(Input);\n"]},"metadata":{},"sourceType":"module"}